cd main

# Commit current env
env GIT_COMMITTER_NAME="Test"
env GIT_COMMITTER_EMAIL="test@example.com"
env GIT_AUTHOR_NAME=$GIT_COMMITTER_NAME
env GIT_AUTHOR_EMAIL=$GIT_COMMITTER_EMAIL

exec git init --initial-branch=m
exec git add .
exec git commit -m 'init'

# Setup Go and compile
env GOPATH=$WORK/go
env GOCACHE=$WORK/gocache
exec go install -buildvcs=true .
exec go build -buildvcs=true -o main .

# Test output
exec ./main
! stdout unknown
stdout false\nfalse
! stderr .

exec $WORK/go/bin/main
! stdout unknown
stdout false\nfalse
! stderr .

# Test versions without VCS
exec go install -buildvcs=false .
exec go build -buildvcs=false -o main .

exec ./main
stdout unknown\ntrue\ntrue
! stderr .

exec $WORK/go/bin/main
stdout unknown\ntrue\ntrue
! stderr .

-- main/main.go --
package main

import (
    "fmt"

    "github.com/earthboundkid/versioninfo/v2"
)

func main() {
    fmt.Println(versioninfo.Revision)
    fmt.Println(versioninfo.DirtyBuild)
    fmt.Println(versioninfo.LastCommit.IsZero())
}
